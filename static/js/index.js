var m=Object.defineProperty;var u=(i,t,e)=>t in i?m(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var n=(i,t,e)=>u(i,typeof t!="symbol"?t+"":t,e);const p="https://jsonplaceholder.typicode.com/";class g{constructor(t=p){this.baseUrl=t}async getAlbumsByUserId(t){const e=new URL(this.baseUrl);return e.pathname="/albums",e.searchParams.set("userId",String(t)),await(await fetch(e.toString(),{method:"GET"})).json()}async getPhotosByAlbumId(t){const e=new URL(this.baseUrl);return e.pathname="/photos",e.searchParams.set("albumId",String(t)),await(await fetch(e.toString(),{method:"GET"})).json()}}class o{constructor(t){n(this,"_element");const e=document.querySelector(t);if(!e)throw new Error(`Element with selector: ${t} was not found`);this._element=e}get element(){return this._element}}class r{handleStateUpdate(t){}setState(t){const e=typeof t=="function"?t(this.state):t;this.state={...this.state,...e},this.handleStateUpdate(this.state)}}class h extends r{constructor(e){super();n(this,"htmlComponent");this.htmlComponent=new o(e)}get element(){return this.htmlComponent.element}}class b extends o{show(){this.element.style.display="block"}hide(){this.element.style.display="none"}}class w extends o{constructor(t,e){super(t),this.handleImageClick=e}displayPhotos(t){this.element.innerHTML=t.map((e,s)=>`<li data-index=${s} class="grid-item">
                  <figure class="effect-bubba">
                    <img src="${e.thumbnailUrl}" alt="${e.title}" class="img-fluid tm-img" />
                    <figcaption data-index=${s}>
                      <p class="tm-figure-description">${e.title}</p>
                    </figcaption>
                  </figure>
                </li>`).join("")}init(){this.element.addEventListener("click",t=>{const e=t.target;t.preventDefault(),this.handleImageClick(+e.getAttribute("data-index"))})}}class f extends h{constructor(){super(...arguments);n(this,"state",{isOpened:!1,currentIndex:0,photos:[]})}init(){window.addEventListener("keydown",e=>{this.element.classList.contains("is-open")&&this.setState(s=>{e.key==="Escape"&&this.close();const a=s.photos.length;let l=s.currentIndex;return e.key==="ArrowLeft"?(l--,l<0&&(l=a-1)):e.key==="ArrowRight"&&(l++,l>=a&&(l=0)),{currentIndex:l}})})}handleStateUpdate(e){e.isOpened?this.element.classList.add("is-open"):this.element.classList.remove("is-open"),document.getElementById("lightbox-image").setAttribute("src",e.photos[e.currentIndex].url)}open(e,s){this.setState({photos:e,currentIndex:s,isOpened:!0})}close(){this.setState({isOpened:!1})}}class y extends h{constructor(){super(...arguments);n(this,"state",{items:[]})}setNavItems(e){this.setState({items:e})}handleStateUpdate(e){this.element.innerHTML=e.items.map(s=>`<li class="nav-item active selected">
                  <a class="nav-link" href="${s.href}">${s.title}</a>
                </li>`).join("")}}class I extends r{constructor(e,s,a,l,c,d){super();n(this,"state",{albums:null,photos:null,selectedAlbumId:null,isLoading:!0});n(this,"navList");n(this,"galleryList");n(this,"galleryModal");n(this,"loader");n(this,"photosAlbumService",new g);this.userId=e,this.state.selectedAlbumId=s,this.handleImageClick=this.handleImageClick.bind(this),this.navList=new y(a),this.galleryList=new w(l,this.handleImageClick),this.galleryModal=new f(c),this.loader=new b(d)}async init(){var l;this.galleryList.init(),this.galleryModal.init();const e=await this.photosAlbumService.getAlbumsByUserId(this.userId);let s=null;const a=this.state.selectedAlbumId??((l=e.at(0))==null?void 0:l.id)??null;a&&(s=await this.photosAlbumService.getPhotosByAlbumId(a)),await this.wait(2e3),this.setState({albums:e.slice(0,5),photos:s,selectedAlbumId:a,isLoading:!1})}async wait(e){return new Promise(s=>setTimeout(s,e))}handleImageClick(e){this.galleryModal.open(this.state.photos??[],e)}handleStateUpdate(e){var s;e.isLoading?this.loader.show():this.loader.hide(),this.navList.setNavItems(((s=e.albums)==null?void 0:s.map((a,l)=>({title:`Album ${l+1}`,href:`./?album=${a.id}`})))??[]),this.galleryList.displayPhotos(e.photos??[])}}function L(){const i=new URL(window.location.href).searchParams.get("album");return i?+i:1}const A=new I(1,L(),"#nav-list","#photos-list","#lightbox","#loader-wrapper");A.init();
